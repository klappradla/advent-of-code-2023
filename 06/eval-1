#!/usr/bin/env python3

from functools import reduce
from itertools import dropwhile, takewhile
import sys

def dist(hold, time):
    if hold < time:
        return (time - hold) * hold
    return 0

def parse(file):
    times = map(int, next(file).removeprefix("Time:").strip().split())
    dists = map(int, next(file).removeprefix("Distance:").strip().split())
    return list(zip(times, dists))

if __name__ == "__main__":
    races = parse(sys.stdin)
    opts = (takewhile(lambda t: dist(t, time) > record, dropwhile(lambda t: dist(t, time) <= record, range(1, time))) for (time, record) in races)
    print(reduce(lambda a, b: a * b, [len(list(o)) for o in opts]))
