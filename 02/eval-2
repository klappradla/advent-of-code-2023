#!/usr/bin/env python3

from collections import Counter
from dataclasses import dataclass
from functools import reduce
import sys

@dataclass
class Game:
    number: int
    samples: list

def power(counts):
    return reduce(lambda a, b: a * b, counts.values())

def min(game):
    return reduce(lambda m, s: m | s, game.samples)

def count(input):
    n, label = input.split(' ')
    return (label, int(n))

def counts(input):
    return Counter(dict(count(part) for part in input.split(', ')))

def parse(input):
    num, outcomes = input.removeprefix('Game ').split(': ')
    samples = [counts(part) for part in outcomes.split('; ')]
    return Game(int(num), samples)

if __name__ == '__main__':
    games = [parse(line.rstrip()) for line in sys.stdin]
    print(sum(power(min(game)) for game in games))
